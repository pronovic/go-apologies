// Code generated by mockery v2.40.1. DO NOT EDIT.

package model

import mock "github.com/stretchr/testify/mock"

// MockCard is an autogenerated mock type for the Card type
type MockCard struct {
	mock.Mock
}

// Copy provides a mock function with given fields:
func (_m *MockCard) Copy() Card {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Copy")
	}

	var r0 Card
	if rf, ok := ret.Get(0).(func() Card); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Card)
		}
	}

	return r0
}

// Id provides a mock function with given fields:
func (_m *MockCard) Id() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Id")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Type provides a mock function with given fields:
func (_m *MockCard) Type() CardType {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Type")
	}

	var r0 CardType
	if rf, ok := ret.Get(0).(func() CardType); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(CardType)
	}

	return r0
}

// NewMockCard creates a new instance of MockCard. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCard(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCard {
	mock := &MockCard{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
